import { Button, VerticalBox, LineEdit } from "std-widgets.slint";

export component AppWindow inherits Window {
    title: "Income Divider";

    in property <string> results: "";
    in-out property <bool> open_curtain;
    callback divide-income(string);

    VerticalBox {
        padding: 50px;
        spacing: 25px;

         Text {
           text: "Enter Total Income";
            horizontal-alignment: center;
            font-size: 24px;
            font-weight: 900;
        }

        income := LineEdit {
            placeholder-text: "Income Amount";
            horizontal-alignment: center;
            font-size: 16px;
            height: 35px;
        }

        Button {
            text: "Calculate";
            primary: true;
            height: 35px;
            clicked => {
                root.open_curtain = !root.open_curtain;
                divide-income(income.text);
            }
        }

        Rectangle {
        height: 100px;
            Rectangle {
                background: #f2f2f2;
                height: 100px;
                    Text {
                        color: black;
                        horizontal-alignment: center;
                        font-size: 16px;
                        font-weight: 500;
                        text: root.results;
                }
            }

            // Left curtain
            Rectangle {
                background: black;
                x: 0;
                width: open_curtain ? 0px : parent.width / 2;
                height: parent.height;
                animate width {
                     duration: 250ms; easing: ease-in-bounce;
                }
            }

            // Right curtain
            Rectangle {
                background: black;
                x: open_curtain ? parent.width : parent.width / 2;
                width: open_curtain ? 0px : parent.width / 2;
                height: parent.height;
                animate width {
                     duration: 250ms; easing: ease-in-bounce;
                }
                animate x {
                     duration: 250ms; easing: ease-in-bounce;
                }
            }
        }
    }
}
